(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"+Bji":function(n,s){n.exports='<span class="token punctuation" >[</span>\n  <span class="token punctuation" >{</span>\n    <span class="token string" >"key"</span><span class="token punctuation" >:</span> <span class="token string" >"firstName"</span><span class="token punctuation" >,</span>\n    <span class="token string" >"type"</span><span class="token punctuation" >:</span> <span class="token string" >"input"</span><span class="token punctuation" >,</span>\n    <span class="token string" >"templateOptions"</span><span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n      <span class="token string" >"label"</span><span class="token punctuation" >:</span> <span class="token string" >"First Name"</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >{</span>\n    <span class="token string" >"key"</span><span class="token punctuation" >:</span> <span class="token string" >"lastName"</span><span class="token punctuation" >,</span>\n    <span class="token string" >"type"</span><span class="token punctuation" >:</span> <span class="token string" >"input"</span><span class="token punctuation" >,</span>\n    <span class="token string" >"templateOptions"</span><span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n      <span class="token string" >"label"</span><span class="token punctuation" >:</span> <span class="token string" >"Last Name"</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >{</span>\n    <span class="token string" >"key"</span><span class="token punctuation" >:</span> <span class="token string" >"mac"</span><span class="token punctuation" >,</span>\n    <span class="token string" >"type"</span><span class="token punctuation" >:</span> <span class="token string" >"input"</span><span class="token punctuation" >,</span>\n    <span class="token string" >"templateOptions"</span><span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n      <span class="token string" >"label"</span><span class="token punctuation" >:</span> <span class="token string" >"Mac Address"</span><span class="token punctuation" >,</span>\n      <span class="token string" >"pattern"</span><span class="token punctuation" >:</span> <span class="token string" >"([0-9A-F]{2}[:-]){5}([0-9A-F]{2})"</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >{</span>\n    <span class="token string" >"key"</span><span class="token punctuation" >:</span> <span class="token string" >"color"</span><span class="token punctuation" >,</span>\n    <span class="token string" >"type"</span><span class="token punctuation" >:</span> <span class="token string" >"radio"</span><span class="token punctuation" >,</span>\n    <span class="token string" >"templateOptions"</span><span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n      <span class="token string" >"label"</span><span class="token punctuation" >:</span> <span class="token string" >"Color Preference (try this out)"</span><span class="token punctuation" >,</span>\n      <span class="token string" >"options"</span><span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n        <span class="token punctuation" >{</span>\n          <span class="token string" >"label"</span><span class="token punctuation" >:</span> <span class="token string" >"No Preference"</span><span class="token punctuation" >,</span>\n          <span class="token string" >"value"</span><span class="token punctuation" >:</span> <span class="token keyword" >null</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        <span class="token punctuation" >{</span>\n          <span class="token string" >"label"</span><span class="token punctuation" >:</span> <span class="token string" >"Green"</span><span class="token punctuation" >,</span>\n          <span class="token string" >"value"</span><span class="token punctuation" >:</span> <span class="token string" >"green"</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        <span class="token punctuation" >{</span>\n          <span class="token string" >"label"</span><span class="token punctuation" >:</span> <span class="token string" >"Blue"</span><span class="token punctuation" >,</span>\n          <span class="token string" >"value"</span><span class="token punctuation" >:</span> <span class="token string" >"blue"</span>\n        <span class="token punctuation" >}</span>\n      <span class="token punctuation" >]</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >{</span>\n    <span class="token string" >"key"</span><span class="token punctuation" >:</span> <span class="token string" >"reason"</span><span class="token punctuation" >,</span>\n    <span class="token string" >"type"</span><span class="token punctuation" >:</span> <span class="token string" >"textarea"</span><span class="token punctuation" >,</span>\n    <span class="token string" >"templateOptions"</span><span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n      <span class="token string" >"label"</span><span class="token punctuation" >:</span> <span class="token string" >"Why?"</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token string" >"expressionProperties"</span><span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n      <span class="token string" >"templateOptions.label"</span><span class="token punctuation" >:</span> <span class="token string" >"\'Why did you choose \' + model.color + \'?\'"</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token string" >"hideExpression"</span><span class="token punctuation" >:</span> <span class="token string" >"!model.color"</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >]</span>\n'},"53ZX":function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Injectable <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> HttpClient <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/common/http\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Observable<span class="token punctuation" >,</span> forkJoin <span class="token punctuation" >}</span> from <span class="token string" >\'rxjs\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFieldConfig <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Injectable</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >UserService</span> <span class="token punctuation" >{</span>\n  <span class="token keyword" >constructor</span><span class="token punctuation" >(</span><span class="token keyword" >private</span> http<span class="token punctuation" >:</span> HttpClient<span class="token punctuation" >)</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span>\n\n  <span class="token function" >getUserData</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span><span class="token punctuation" >:</span> Observable<span class="token operator" >&lt;</span><span class="token keyword" >any</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token function" >forkJoin</span><span class="token punctuation" >(</span><span class="token punctuation" >[</span><span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >getUser</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span><span class="token punctuation" >,</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >getFields</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span><span class="token punctuation" >]</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token function" >getUser</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>http<span class="token punctuation" >.</span><span class="token keyword" >get</span><span class="token operator" >&lt;</span><span class="token punctuation" >{</span> firstName<span class="token punctuation" >:</span> <span class="token keyword" >string</span><span class="token punctuation" >,</span> lastName<span class="token punctuation" >:</span> <span class="token keyword" >string</span> <span class="token punctuation" >}</span><span class="token operator" >></span><span class="token punctuation" >(</span><span class="token string" >\'assets/json-powered/user_json\'</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token function" >getFields</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>http<span class="token punctuation" >.</span><span class="token keyword" >get</span><span class="token operator" >&lt;</span>FormlyFieldConfig<span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token operator" >></span><span class="token punctuation" >(</span><span class="token string" >\'assets/json-powered/user-form_json\'</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'},"7gGT":function(n,s){n.exports='<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>form</span> <span class="token attr-name" >[formGroup]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span> <span class="token attr-name" >(ngSubmit)</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit()<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>formly-form</span> <span class="token attr-name" >[model]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>model<span class="token punctuation" >"</span></span> <span class="token attr-name" >[fields]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>fields<span class="token punctuation" >"</span></span> <span class="token attr-name" >[options]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>options<span class="token punctuation" >"</span></span> <span class="token attr-name" >[form]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>button</span> <span class="token attr-name" >type</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit<span class="token punctuation" >"</span></span> <span class="token attr-name" >class</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>btn btn-primary submit-button<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>Submit<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>button</span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>formly-form</span><span class="token punctuation" >></span></span>\n<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>form</span><span class="token punctuation" >></span></span>\n'},"96br":function(n,s){n.exports='[\n  {\n    "key": "firstName",\n    "type": "input",\n    "templateOptions": {\n      "label": "First Name"\n    }\n  },\n  {\n    "key": "lastName",\n    "type": "input",\n    "templateOptions": {\n      "label": "Last Name"\n    }\n  },\n  {\n    "key": "mac",\n    "type": "input",\n    "templateOptions": {\n      "label": "Mac Address",\n      "pattern": "([0-9A-F]{2}[:-]){5}([0-9A-F]{2})"\n    }\n  },\n  {\n    "key": "color",\n    "type": "radio",\n    "templateOptions": {\n      "label": "Color Preference (try this out)",\n      "options": [\n        {\n          "label": "No Preference",\n          "value": null\n        },\n        {\n          "label": "Green",\n          "value": "green"\n        },\n        {\n          "label": "Blue",\n          "value": "blue"\n        }\n      ]\n    }\n  },\n  {\n    "key": "reason",\n    "type": "textarea",\n    "templateOptions": {\n      "label": "Why?"\n    },\n    "expressionProperties": {\n      "templateOptions.label": "\'Why did you choose \' + model.color + \'?\'"\n    },\n    "hideExpression": "!model.color"\n  }\n]\n'},HhG4:function(n,s,a){"use strict";a.r(s);var t=a("CcnG"),p=a("gIcY"),o=a("VNr4"),e=function(){function n(n){this.http=n}return n.prototype.getUserData=function(){return Object(o.a)([this.getUser(),this.getFields()])},n.prototype.getUser=function(){return this.http.get("assets/json-powered/user_json")},n.prototype.getFields=function(){return this.http.get("assets/json-powered/user-form_json")},n}(),c=function(){function n(n){var s=this;this.userService=n,this.form=new p.FormGroup({}),this.options={},this.userService.getUserData().subscribe(function(n){var a=n[1];s.model=n[0],s.fields=a})}return n.prototype.submit=function(){this.form.valid&&alert(JSON.stringify(this.model))},n}(),l={examples:[{title:"JSON powered",description:"\n              This is an example of powering a form strictly by JSON. The common use case for this\n              would be to persist the form configuration in the database and then send the configuration\n              up to power the form. Notice that you can still use most features like <code>expressionProperties</code>\n              and <code>validators</code> even in a string form.\n            ",component:c,files:[{file:"app.component.html",content:a("7gGT"),filecontent:a("Z0CI")},{file:"app.component.ts",content:a("mgvB"),filecontent:a("NYR+")},{file:"user.service.ts",content:a("53ZX"),filecontent:a("uZGf")},{file:"assets/json-powered/user.json",content:a("oZf8"),filecontent:a("kfcv")},{file:"assets/json-powered/user-form.json",content:a("+Bji"),filecontent:a("96br")},{file:"app.module.ts",content:a("cBuI"),filecontent:a("SoTb")}]}]},u=function(){},i=a("NcP4"),r=a("goW2"),k=a("htty"),m=a("MT1c"),d=a("1Q/V"),f=a("9+aI"),g=a("haId"),y=a("LJsP"),b=a("yR2A"),v=a("grA4"),h=a("UFMs"),w=a("pMnS"),F=a("4o01"),C=a("Dl9q"),x=a("9Glx"),N=a("UcnZ"),M=a("DAbo"),O=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function S(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,8,"form",[["novalidate",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngSubmit"],[null,"submit"],[null,"reset"]],function(n,s,a){var p=!0,o=n.component;return"submit"===s&&(p=!1!==t["\u0275nov"](n,2).onSubmit(a)&&p),"reset"===s&&(p=!1!==t["\u0275nov"](n,2).onReset()&&p),"ngSubmit"===s&&(p=!1!==o.submit()&&p),p},null,null)),t["\u0275did"](1,16384,null,0,p["\u0275angular_packages_forms_forms_bg"],[],null,null),t["\u0275did"](2,540672,null,0,p.FormGroupDirective,[[8,null],[8,null]],{form:[0,"form"]},{ngSubmit:"ngSubmit"}),t["\u0275prd"](2048,null,p.ControlContainer,null,[p.FormGroupDirective]),t["\u0275did"](4,16384,null,0,p.NgControlStatusGroup,[[4,p.ControlContainer]],null,null),(n()(),t["\u0275eld"](5,0,null,null,3,"formly-form",[],null,null,null,C.b,C.a)),t["\u0275did"](6,966656,null,0,x.a,[N.a,M.b,[2,p.NgForm],[2,p.FormGroupDirective],[3,x.a]],{model:[0,"model"],form:[1,"form"],fields:[2,"fields"],options:[3,"options"]},null),(n()(),t["\u0275eld"](7,0,null,0,1,"button",[["class","btn btn-primary submit-button"],["type","submit"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Submit"]))],function(n,s){var a=s.component;n(s,2,0,a.form),n(s,6,0,a.model,a.form,a.fields,a.options)},function(n,s){n(s,0,0,t["\u0275nov"](s,4).ngClassUntouched,t["\u0275nov"](s,4).ngClassTouched,t["\u0275nov"](s,4).ngClassPristine,t["\u0275nov"](s,4).ngClassDirty,t["\u0275nov"](s,4).ngClassValid,t["\u0275nov"](s,4).ngClassInvalid,t["\u0275nov"](s,4).ngClassPending)})}var _=t["\u0275ccf"]("formly-app-example",c,function(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"formly-app-example",[],null,null,null,S,O)),t["\u0275did"](1,49152,null,0,c,[e],null,null)],null,null)},{},{},[]),U=a("Ip0R"),j=a("M2Lx"),A=a("eDkP"),R=a("Fzqc"),G=a("v9Dh"),I=a("6LlJ"),D=a("F6kA"),B=a("t/Na"),J=a("dWZg"),L=a("lLAP"),P=a("4c35"),T=a("qAlS"),Z=a("Wf4p"),H=a("La40"),W=a("SMsm"),E=a("UodH"),X=a("5QwG"),Y=a("XR12"),z=a("me7w"),Q=a("N3PW"),q=a("l4pn"),V=a("Fv2i"),K=a("wBYW"),$=a("IE48"),nn=a("zn1Q"),sn=a("Q4Tx"),an=a("zdmU"),tn=a("Nsh5"),pn=a("8mMr"),on=a("LC5p"),en=a("0/Q6"),cn=a("mqvi"),ln=a("lYui"),un=a("1ey0"),rn=function(){},kn=a("ZYCi"),mn=a("cIcG");a.d(s,"ConfigModuleNgFactory",function(){return dn});var dn=t["\u0275cmf"](u,[],function(n){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[i.a,r.a,k.a,m.a,d.a,f.a,g.a,y.a,b.a,v.a,h.a,w.a,F.a,_]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,U.NgLocalization,U.NgLocaleLocalization,[t.LOCALE_ID,[2,U["\u0275angular_packages_common_common_a"]]]),t["\u0275mpd"](4608,j.c,j.c,[]),t["\u0275mpd"](4608,A.c,A.c,[A.i,A.e,t.ComponentFactoryResolver,A.h,A.f,t.Injector,t.NgZone,U.DOCUMENT,R.b]),t["\u0275mpd"](5120,A.j,A.k,[A.c]),t["\u0275mpd"](5120,G.b,G.c,[A.c]),t["\u0275mpd"](4608,I.a,I.a,[]),t["\u0275mpd"](4608,D.a,D.a,[]),t["\u0275mpd"](4608,B.h,B.n,[U.DOCUMENT,t.PLATFORM_ID,B.l]),t["\u0275mpd"](4608,B.o,B.o,[B.h,B.m]),t["\u0275mpd"](5120,B.a,function(n){return[n]},[B.o]),t["\u0275mpd"](4608,B.k,B.k,[]),t["\u0275mpd"](6144,B.i,null,[B.k]),t["\u0275mpd"](4608,B.g,B.g,[B.i]),t["\u0275mpd"](6144,B.b,null,[B.g]),t["\u0275mpd"](4608,B.f,B.j,[B.b,t.Injector]),t["\u0275mpd"](4608,B.c,B.c,[B.f]),t["\u0275mpd"](4608,p.FormBuilder,p.FormBuilder,[]),t["\u0275mpd"](4608,p["\u0275angular_packages_forms_forms_i"],p["\u0275angular_packages_forms_forms_i"],[]),t["\u0275mpd"](4608,N.a,N.a,[M.b]),t["\u0275mpd"](4608,e,e,[B.c]),t["\u0275mpd"](1073742336,U.CommonModule,U.CommonModule,[]),t["\u0275mpd"](1073742336,J.b,J.b,[]),t["\u0275mpd"](1073742336,j.d,j.d,[]),t["\u0275mpd"](1073742336,L.a,L.a,[]),t["\u0275mpd"](1073742336,R.a,R.a,[]),t["\u0275mpd"](1073742336,P.g,P.g,[]),t["\u0275mpd"](1073742336,T.b,T.b,[]),t["\u0275mpd"](1073742336,A.g,A.g,[]),t["\u0275mpd"](1073742336,Z.l,Z.l,[[2,Z.d]]),t["\u0275mpd"](1073742336,G.e,G.e,[]),t["\u0275mpd"](1073742336,Z.w,Z.w,[]),t["\u0275mpd"](1073742336,H.i,H.i,[]),t["\u0275mpd"](1073742336,W.b,W.b,[]),t["\u0275mpd"](1073742336,E.c,E.c,[]),t["\u0275mpd"](1073742336,X.b,X.b,[]),t["\u0275mpd"](512,M.b,M.b,[]),t["\u0275mpd"](1024,M.a,function(n,s){return[Y.b(n),{types:[{name:"input",component:z.a,wrappers:["form-field"]},{name:"checkbox",component:Q.a,wrappers:["form-field"],defaultOptions:{templateOptions:{indeterminate:!0,hideLabel:!0}}},{name:"radio",component:q.a,wrappers:["form-field"],defaultOptions:{templateOptions:{options:[]}}},{name:"select",component:V.a,wrappers:["form-field"],defaultOptions:{templateOptions:{options:[]}}},{name:"textarea",component:K.a,wrappers:["form-field"],defaultOptions:{templateOptions:{cols:1,rows:1}}},{name:"multicheckbox",component:$.a,wrappers:["form-field"],defaultOptions:{templateOptions:{options:[]}}}],wrappers:[{name:"addons",component:nn.a},{name:"form-field",component:sn.a}],manipulators:[{class:an.a,method:"run"}]},Y.b(s),{}]},[M.b,M.b]),t["\u0275mpd"](1073742336,Y.a,Y.a,[M.b,t.ComponentFactoryResolver,[2,M.a]]),t["\u0275mpd"](1073742336,tn.h,tn.h,[]),t["\u0275mpd"](1073742336,pn.b,pn.b,[]),t["\u0275mpd"](1073742336,Z.m,Z.m,[]),t["\u0275mpd"](1073742336,Z.u,Z.u,[]),t["\u0275mpd"](1073742336,on.b,on.b,[]),t["\u0275mpd"](1073742336,en.c,en.c,[]),t["\u0275mpd"](1073742336,cn.a,cn.a,[]),t["\u0275mpd"](1073742336,B.e,B.e,[]),t["\u0275mpd"](1073742336,B.d,B.d,[]),t["\u0275mpd"](1073742336,p["\u0275angular_packages_forms_forms_bb"],p["\u0275angular_packages_forms_forms_bb"],[]),t["\u0275mpd"](1073742336,p.ReactiveFormsModule,p.ReactiveFormsModule,[]),t["\u0275mpd"](1073742336,ln.a,ln.a,[]),t["\u0275mpd"](1073742336,un.a,un.a,[]),t["\u0275mpd"](1073742336,rn,rn,[]),t["\u0275mpd"](1073742336,kn.s,kn.s,[[2,kn.y],[2,kn.p]]),t["\u0275mpd"](1073742336,u,u,[]),t["\u0275mpd"](256,B.l,"XSRF-TOKEN",[]),t["\u0275mpd"](256,B.m,"X-XSRF-TOKEN",[]),t["\u0275mpd"](1024,kn.n,function(){return[[{path:"",component:mn.a,data:l}]]},[])])})},"NYR+":function(n,s){n.exports="import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\nimport { UserService } from './user.service';\n\n@Component({\n  selector: 'formly-app-example',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  form = new FormGroup({});\n  options: FormlyFormOptions = {};\n\n  model;\n  fields: FormlyFieldConfig[];\n\n  constructor(private userService: UserService) {\n    this.userService.getUserData().subscribe(([model, fields]) => {\n      this.model = model;\n      this.fields = fields;\n    });\n  }\n\n  submit() {\n    if (this.form.valid) {\n      alert(JSON.stringify(this.model));\n    }\n  }\n}\n"},SoTb:function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\n\nimport { AppComponent } from './app.component';\n\nimport { UserService } from './user.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormlyBootstrapModule,\n    FormlyModule.forRoot(),\n  ],\n  declarations: [\n    AppComponent,\n  ],\n  providers: [UserService],\n})\nexport class AppModule { }\n"},Z0CI:function(n,s){n.exports='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form">\n    <button type="submit" class="btn btn-primary submit-button">Submit</button>\n  </formly-form>\n</form>\n'},cBuI:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> NgModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> CommonModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/common\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> HttpClientModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/common/http\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> ReactiveFormsModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyBootstrapModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/bootstrap\'</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> AppComponent <span class="token punctuation" >}</span> from <span class="token string" >\'./app.component\'</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> UserService <span class="token punctuation" >}</span> from <span class="token string" >\'./user.service\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >NgModule</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  imports<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    CommonModule<span class="token punctuation" >,</span>\n    HttpClientModule<span class="token punctuation" >,</span>\n    ReactiveFormsModule<span class="token punctuation" >,</span>\n    FormlyBootstrapModule<span class="token punctuation" >,</span>\n    FormlyModule<span class="token punctuation" >.</span><span class="token function" >forRoot</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n  declarations<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    AppComponent<span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n  providers<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>UserService<span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppModule</span> <span class="token punctuation" >{</span> <span class="token punctuation" >}</span>\n'},kfcv:function(n,s){n.exports='{\n  "firstName": "Joan",\n  "lastName": "of Arc"\n}\n'},mgvB:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormGroup <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFormOptions<span class="token punctuation" >,</span> FormlyFieldConfig <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> UserService <span class="token punctuation" >}</span> from <span class="token string" >\'./user.service\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-app-example\'</span><span class="token punctuation" >,</span>\n  templateUrl<span class="token punctuation" >:</span> <span class="token string" >\'./app.component.html\'</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppComponent</span> <span class="token punctuation" >{</span>\n  form <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >FormGroup</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  options<span class="token punctuation" >:</span> FormlyFormOptions <span class="token operator" >=</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n\n  model<span class="token punctuation" >;</span>\n  fields<span class="token punctuation" >:</span> FormlyFieldConfig<span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n\n  <span class="token keyword" >constructor</span><span class="token punctuation" >(</span><span class="token keyword" >private</span> userService<span class="token punctuation" >:</span> UserService<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span>userService<span class="token punctuation" >.</span><span class="token function" >getUserData</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span><span class="token punctuation" >.</span><span class="token function" >subscribe</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span><span class="token punctuation" >[</span>model<span class="token punctuation" >,</span> fields<span class="token punctuation" >]</span><span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >this</span><span class="token punctuation" >.</span>model <span class="token operator" >=</span> model<span class="token punctuation" >;</span>\n      <span class="token keyword" >this</span><span class="token punctuation" >.</span>fields <span class="token operator" >=</span> fields<span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token function" >submit</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>form<span class="token punctuation" >.</span>valid<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token function" >alert</span><span class="token punctuation" >(</span>JSON<span class="token punctuation" >.</span><span class="token function" >stringify</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'},oZf8:function(n,s){n.exports='<span class="token punctuation" >{</span>\n  <span class="token string" >"firstName"</span><span class="token punctuation" >:</span> <span class="token string" >"Joan"</span><span class="token punctuation" >,</span>\n  <span class="token string" >"lastName"</span><span class="token punctuation" >:</span> <span class="token string" >"of Arc"</span>\n<span class="token punctuation" >}</span>\n'},uZGf:function(n,s){n.exports="import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\n\n@Injectable()\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  getUserData(): Observable<any> {\n    return forkJoin([this.getUser(), this.getFields()]);\n  }\n\n  getUser() {\n    return this.http.get<{ firstName: string, lastName: string }>('assets/json-powered/user_json');\n  }\n\n  getFields() {\n    return this.http.get<FormlyFieldConfig[]>('assets/json-powered/user-form_json');\n  }\n}\n"}}]);